import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as e,a as n}from"./app-BupKcn-7.js";const l={},t=n(`<h2 id="配置证书" tabindex="-1"><a class="header-anchor" href="#配置证书"><span>配置证书</span></a></h2><h3 id="创建一个存放证书目录" tabindex="-1"><a class="header-anchor" href="#创建一个存放证书目录"><span>创建一个存放证书目录</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /usr/local/ca
<span class="token builtin class-name">cd</span> /usr/local/ca
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="创建一键生成证书脚本" tabindex="-1"><a class="header-anchor" href="#创建一键生成证书脚本"><span>创建一键生成证书脚本</span></a></h3><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>vi ca.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>按 A 按键切换为输入模式，然后把下面代码粘贴上去</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
<span class="token assign-left variable">SERVER</span><span class="token operator">=</span><span class="token string">&quot;服务器公网IP&quot;</span>
<span class="token assign-left variable">PASSWORD</span><span class="token operator">=</span><span class="token string">&quot;密码&quot;</span>
<span class="token assign-left variable">COUNTRY</span><span class="token operator">=</span><span class="token string">&quot;CN&quot;</span>
<span class="token assign-left variable">STATE</span><span class="token operator">=</span><span class="token string">&quot;hangzhou&quot;</span>
<span class="token assign-left variable">CITY</span><span class="token operator">=</span><span class="token string">&quot;hangzhou&quot;</span>
<span class="token assign-left variable">ORGANIZATION</span><span class="token operator">=</span><span class="token string">&quot;jiangqingdong&quot;</span>
<span class="token assign-left variable">ORGANIZATIONAL_UNIT</span><span class="token operator">=</span><span class="token string">&quot;dev&quot;</span>
<span class="token assign-left variable">EMAIL</span><span class="token operator">=</span><span class="token string">&quot;邮箱&quot;</span>

<span class="token builtin class-name">echo</span> <span class="token string">&quot;starting...&quot;</span>
<span class="token builtin class-name">cd</span> /usr/local/ca
openssl genrsa <span class="token parameter variable">-aes256</span> <span class="token parameter variable">-passout</span> pass:<span class="token variable">$PASSWORD</span>  <span class="token parameter variable">-out</span> ca-key.pem <span class="token number">4096</span>
openssl req <span class="token parameter variable">-new</span> <span class="token parameter variable">-x509</span> <span class="token parameter variable">-passin</span> <span class="token string">&quot;pass:<span class="token variable">$PASSWORD</span>&quot;</span> <span class="token parameter variable">-days</span> <span class="token number">3650</span> <span class="token parameter variable">-key</span> ca-key.pem <span class="token parameter variable">-sha256</span> <span class="token parameter variable">-out</span> ca.pem <span class="token parameter variable">-subj</span> <span class="token string">&quot;/C=<span class="token variable">$COUNTRY</span>/ST=<span class="token variable">$STATE</span>/L=<span class="token variable">$CITY</span>/O=<span class="token variable">$ORGANIZATION</span>/OU=<span class="token variable">$ORGANIZATIONAL_UNIT</span>/CN=<span class="token variable">$SERVER</span>/emailAddress=<span class="token variable">$EMAIL</span>&quot;</span>
openssl genrsa <span class="token parameter variable">-out</span> server-key.pem <span class="token number">4096</span>
openssl req <span class="token parameter variable">-subj</span> <span class="token string">&quot;/CN=<span class="token variable">$SERVER</span>&quot;</span> <span class="token parameter variable">-new</span> <span class="token parameter variable">-key</span> server-key.pem <span class="token parameter variable">-out</span> server.csr
<span class="token function">sh</span> <span class="token parameter variable">-c</span>  <span class="token string">&#39;echo &quot;subjectAltName = IP:&#39;</span><span class="token variable">$SERVER</span><span class="token string">&#39;,IP:0.0.0.0&quot; &gt;&gt; extfile.cnf&#39;</span>
<span class="token function">sh</span> <span class="token parameter variable">-c</span>  <span class="token string">&#39;echo &quot;extendedKeyUsage = serverAuth&quot; &gt;&gt; extfile.cn&#39;</span>
<span class="token function">sh</span> <span class="token parameter variable">-c</span>  <span class="token string">&#39;echo &quot;extendedKeyUsage = serverAuth&quot; &gt;&gt; extfile.cnf&#39;</span>
openssl x509 <span class="token parameter variable">-req</span> <span class="token parameter variable">-days</span> <span class="token number">3650</span> <span class="token parameter variable">-in</span> server.csr <span class="token parameter variable">-CA</span> ca.pem <span class="token parameter variable">-CAkey</span> ca-key.pem <span class="token parameter variable">-passin</span> <span class="token string">&quot;pass:<span class="token variable">$PASSWORD</span>&quot;</span> <span class="token parameter variable">-CAcreateserial</span> <span class="token parameter variable">-out</span> server-cert.pem <span class="token parameter variable">-extfile</span> extfile.cnf
openssl genrsa <span class="token parameter variable">-out</span> key.pem <span class="token number">4096</span>
openssl req <span class="token parameter variable">-subj</span> <span class="token string">&quot;/CN=client&quot;</span> <span class="token parameter variable">-new</span> <span class="token parameter variable">-key</span> key.pem <span class="token parameter variable">-out</span> client.csr
<span class="token function">sh</span> <span class="token parameter variable">-c</span> <span class="token string">&#39;echo extendedKeyUsage=clientAuth &gt;&gt; extfile-client.cnf&#39;</span>
openssl x509 <span class="token parameter variable">-req</span> <span class="token parameter variable">-days</span> <span class="token number">3650</span> <span class="token parameter variable">-sha256</span> <span class="token parameter variable">-in</span> client.csr <span class="token parameter variable">-CA</span> ca.pem <span class="token parameter variable">-CAkey</span> ca-key.pem <span class="token parameter variable">-passin</span> <span class="token string">&quot;pass:<span class="token variable">$PASSWORD</span>&quot;</span> <span class="token parameter variable">-CAcreateserial</span> <span class="token parameter variable">-out</span> cert.pem <span class="token parameter variable">-extfile</span> extfile-client.cnf
<span class="token function">rm</span> client.csr server.csr
<span class="token function">cp</span> server-*.pem  /etc/docker/
<span class="token function">cp</span> ca.pem /etc/docker/
<span class="token builtin class-name">echo</span> <span class="token string">&quot;========end========&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="保存脚本后执行" tabindex="-1"><a class="header-anchor" href="#保存脚本后执行"><span>保存脚本后执行</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sh</span> ca.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="修改docker配置" tabindex="-1"><a class="header-anchor" href="#修改docker配置"><span>修改Docker配置</span></a></h3><ol><li>使 Docker 守护程序仅接收来自提供 CA 信任的证书的客户端的链接</li></ol><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">vim</span> /lib/systemd/system/docker.service
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li>将 ExecStart 属性值进行替换</li></ol><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token assign-left variable">ExecStart</span><span class="token operator">=</span>/usr/bin/dockerd <span class="token parameter variable">--tlsverify</span> <span class="token parameter variable">--tlscacert</span><span class="token operator">=</span>/usr/local/ca/ca.pem <span class="token parameter variable">--tlscert</span><span class="token operator">=</span>/usr/local/ca/server-cert.pem <span class="token parameter variable">--tlskey</span><span class="token operator">=</span>/usr/local/ca/server-key.pem <span class="token parameter variable">-H</span> tcp://0.0.0.0:2375 <span class="token parameter variable">-H</span> unix:///var/run/docker.sock
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="https://img.jssjqd.cn/202304041605818.png" alt="image-20230404160558327"></p><h3 id="重载服务并重启docker" tabindex="-1"><a class="header-anchor" href="#重载服务并重启docker"><span>重载服务并重启docker</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>systemctl daemon-reload <span class="token operator">&amp;&amp;</span> systemctl restart <span class="token function">docker</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="保存证书客户端文件到本地" tabindex="-1"><a class="header-anchor" href="#保存证书客户端文件到本地"><span>保存证书客户端文件到本地</span></a></h3><h3 id="测试证书是否配置成功" tabindex="-1"><a class="header-anchor" href="#测试证书是否配置成功"><span>测试证书是否配置成功</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">docker</span> <span class="token parameter variable">--tlsverify</span> <span class="token parameter variable">--tlscacert</span><span class="token operator">=</span>ca.pem <span class="token parameter variable">--tlscert</span><span class="token operator">=</span>cert.pem <span class="token parameter variable">--tlskey</span><span class="token operator">=</span>key.pem <span class="token parameter variable">-H</span><span class="token operator">=</span>服务器外网ip:2375 version
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="https://img.jssjqd.cn/202304101618722.png" alt="image-20230404160756318"></p><h3 id="使用idea连接" tabindex="-1"><a class="header-anchor" href="#使用idea连接"><span>使用idea连接</span></a></h3><p><img src="https://img.jssjqd.cn/202304101618331.png" alt="image-20230404160953751"></p><p><img src="https://img.jssjqd.cn/202304101618488.png" alt="image-20230404160939246"></p>`,24),r=[t];function p(i,c){return s(),e("div",null,r)}const v=a(l,[["render",p],["__file","index.html.vue"]]),k=JSON.parse('{"path":"/pages/5655a2/","title":"idea加密连接服务器docker","lang":"zh-CN","frontmatter":{"title":"idea加密连接服务器docker","date":"2023-04-04T16:01:18.000Z","permalink":"/pages/5655a2/","categories":["Docker"],"author":{"name":"江"}},"headers":[{"level":2,"title":"配置证书","slug":"配置证书","link":"#配置证书","children":[{"level":3,"title":"创建一个存放证书目录","slug":"创建一个存放证书目录","link":"#创建一个存放证书目录","children":[]},{"level":3,"title":"创建一键生成证书脚本","slug":"创建一键生成证书脚本","link":"#创建一键生成证书脚本","children":[]},{"level":3,"title":"保存脚本后执行","slug":"保存脚本后执行","link":"#保存脚本后执行","children":[]},{"level":3,"title":"修改Docker配置","slug":"修改docker配置","link":"#修改docker配置","children":[]},{"level":3,"title":"重载服务并重启docker","slug":"重载服务并重启docker","link":"#重载服务并重启docker","children":[]},{"level":3,"title":"保存证书客户端文件到本地","slug":"保存证书客户端文件到本地","link":"#保存证书客户端文件到本地","children":[]},{"level":3,"title":"测试证书是否配置成功","slug":"测试证书是否配置成功","link":"#测试证书是否配置成功","children":[]},{"level":3,"title":"使用idea连接","slug":"使用idea连接","link":"#使用idea连接","children":[]}]}],"git":{"createdTime":1709064007000,"updatedTime":1709064007000,"contributors":[{"name":"jiangqingdong","email":"thejqd@gmail.com","commits":1}]},"readingTime":{"minutes":1.35,"words":406},"filePathRelative":"容器/Docker/100.idea加密连接服务器docker.md","localizedDate":"2023年4月4日","excerpt":"<h2>配置证书</h2>\\n<h3>创建一个存放证书目录</h3>\\n<div class=\\"language-bash\\" data-ext=\\"sh\\" data-title=\\"sh\\"><pre class=\\"language-bash\\"><code><span class=\\"token function\\">mkdir</span> <span class=\\"token parameter variable\\">-p</span> /usr/local/ca\\n<span class=\\"token builtin class-name\\">cd</span> /usr/local/ca\\n</code></pre></div>"}');export{v as comp,k as data};
