(window.webpackJsonp=window.webpackJsonp||[]).push([[79],{404:function(t,p,T){"use strict";T.r(p);var o=T(4),r=Object(o.a)({},(function(){var t=this,p=t._self._c;return p("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[p("p",[t._v("在Dubbo2.7中，默认的是Dubbo协议，因为Dubbo协议相比较于Http1.1而言，Dubbo协议性能上是要更好的。")]),t._v(" "),p("p",[t._v("但是Dubbo协议自己的缺点就是不通用，假如现在通过Dubbo协议提供了一个服务，那如果想要调用该服务就必须要求服务消费者也要支持Dubbo协议，比如想通过浏览器直接调用Dubbo服务是不行的，想通过Nginx调Dubbo服务也是不行的。")]),t._v(" "),p("p",[t._v("而随着企业的发展，往往可能会出现公司内部使用多种技术栈，可能这个部门使用Dubbo，另外一个部门使用Spring Cloud，另外一个部门使用gRPC，那此时部门之间要想相互调用服务就比较复杂了，所以需要一个通用的、性能也好的协议，这就是Triple协议。")]),t._v(" "),p("p",[t._v("Triple协议是基于Http2协议的，也就是在使用Triple协议发送数据时，会按HTTP2协议的格式来发送数据，而HTTP2协议相比较于HTTP1协议而言，HTTP2是HTTP1的升级版，完全兼容HTTP1，而且HTTP2协议从设计层面就解决了HTTP1性能低的问题，具体看https://www.cnblogs.com/mrliuzf/p/14596005.html")]),t._v(" "),p("p",[t._v("另外，Google公司开发的gRPC，也基于的HTTP2，目前gRPC是云原生事实上协议标准，包括k8s/etcd等都支持gRPC协议。")]),t._v(" "),p("p",[t._v("所以Dubbo3.0为了能够更方便的和k8s进行通信，在实现Triple的时候也兼容了gRPC，也就是可以用gPRC的客户端调用Dubbo3.0所提供的triple服务，也可以用triple服务调用gRPC的服务，这些前面有演示。")]),t._v(" "),p("h4",{attrs:{id:"http2简单介绍"}},[p("a",{staticClass:"header-anchor",attrs:{href:"#http2简单介绍"}},[t._v("#")]),t._v(" HTTP2简单介绍")]),t._v(" "),p("p",[t._v("因为Triple协议是基于HTTP2协议的，所以我们得先大概了解一下HTTP2，我们比较熟悉的是HTTP1，比如—个HTTP1的请求数据格式如下:")]),t._v(" "),p("p",[p("img",{attrs:{src:"https://img.jssjqd.cn/202211121050948.png",alt:"image-20221112105013165"}})]),t._v(" "),p("p",[p("img",{attrs:{src:"C:/Users/jiang/AppData/Roaming/Typora/typora-user-images/image-20221112105044972.png",alt:"image-20221112105044972"}})]),t._v(" "),p("p",[t._v('表示在使用HTTP1协议时，需要把要发送的数据组织成上面这个格式。比如，我现在想要发送"hello"这个字符串，你可以这样发：')])])}),[],!1,null,null,null);p.default=r.exports}}]);