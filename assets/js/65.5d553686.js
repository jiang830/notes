(window.webpackJsonp=window.webpackJsonp||[]).push([[65],{389:function(a,t,s){"use strict";s.r(t);var n=s(4),e=Object(n.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h2",{attrs:{id:"rabbitmq集群的两种模式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#rabbitmq集群的两种模式"}},[a._v("#")]),a._v(" RabbitMQ集群的两种模式")]),a._v(" "),t("h3",{attrs:{id:"普通集群"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#普通集群"}},[a._v("#")]),a._v(" 普通集群")]),a._v(" "),t("p",[a._v("普通集群模式，就是将 RabbitMQ 部署到多台服务器上，每个服务器启动一个 RabbitMQ 实例，多个实例之间进行消息通信。")]),a._v(" "),t("p",[a._v("此时我们创建的队列 Queue，它的元数据（主要就是 Queue 的一些配置信息）会在所有的 RabbitMQ 实例中进行同步，但是队列中的消息只会存在于一个 RabbitMQ 实例上，而不会同步到其他队列。")]),a._v(" "),t("p",[a._v("当我们消费消息的时候，如果连接到了另外一个实例，那么那个实例会通过元数据定位到 Queue 所在的位置，然后访问 Queue 所在的实例，拉取数据过来发送给消费者。")]),a._v(" "),t("p",[a._v("这种集群可以提高 RabbitMQ 的消息吞吐能力，但是无法保证高可用，因为一旦一个 RabbitMQ 实例挂了，消息就没法访问了，如果消息队列做了持久化，那么等 RabbitMQ 实例恢复后，就可以继续访问了；如果消息队列没做持久化，那么消息就丢了。")]),a._v(" "),t("p",[a._v("大致的流程图如下图：")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://img.jssjqd.cn/202211080149876.png",alt:""}})]),a._v(" "),t("h3",{attrs:{id:"镜像集群"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#镜像集群"}},[a._v("#")]),a._v(" 镜像集群")]),a._v(" "),t("p",[a._v("它和普通集群最大的区别在于Queue数据和原数据不再是单独存储在一台机器上，而是同时存储在多台机器上。也就是说每个RabbitMQ实例都有一份镜像数据（副本数据）。每次写入消息的时候都会自动把数据同步到多台实例上去，这样一旦其中一台机器发生故障，其他机器还有一份副本数据可以继续提供服务，也就实现了高可用。")]),a._v(" "),t("p",[a._v("大致流程图如下图：")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://img.jssjqd.cn/202211080149140.png",alt:""}})]),a._v(" "),t("h2",{attrs:{id:"节点类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#节点类型"}},[a._v("#")]),a._v(" 节点类型")]),a._v(" "),t("p",[a._v("RabbitMQ 中的节点类型有两种：")]),a._v(" "),t("ul",[t("li",[a._v("RAM node：内存节点将所有的队列、交换机、绑定、用户、权限和 vhost 的元数据定义存储在内存中，好处是可以使得交换机和队列声明等操作速度更快。")]),a._v(" "),t("li",[a._v("Disk node：将元数据存储在磁盘中，单节点系统只允许磁盘类型的节点，防止重启 RabbitMQ 的时候，丢失系统的配置信息")])]),a._v(" "),t("p",[a._v("RabbitMQ 要求在集群中至少有一个磁盘节点，所有其他节点可以是内存节点，当节点加入或者离开集群时，必须要将该变更通知到至少一个磁盘节点。如果集群中唯一的一个磁盘节点崩溃的话，集群仍然可以保持运行，但是无法进行其他操作（增删改查），直到节点恢复。为了确保集群信息的可靠性，或者在不确定使用磁盘节点还是内存节点的时候，建议直接用磁盘节点。")]),a._v(" "),t("h2",{attrs:{id:"rabbitmq集群搭建"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#rabbitmq集群搭建"}},[a._v("#")]),a._v(" RabbitMQ集群搭建")]),a._v(" "),t("h3",{attrs:{id:"普通集群-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#普通集群-2"}},[a._v("#")]),a._v(" 普通集群")]),a._v(" "),t("h4",{attrs:{id:"预备知识"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#预备知识"}},[a._v("#")]),a._v(" "),t("strong",[a._v("预备知识")])]),a._v(" "),t("p",[a._v("大致的结构了解了，接下来我们就把集群给搭建起来。先从普通集群开始，我们就使用 docker 来搭建。")]),a._v(" "),t("p",[a._v("搭建之前，有两个预备知识需要大家了解：")]),a._v(" "),t("ul",[t("li",[a._v("搭建集群时，节点中的 Erlang Cookie 值要一致，默认情况下，文件在 /var/lib/rabbitmq/.erlang.cookie，我们在用 docker 创建 RabbitMQ 容器时，可以为之设置相应的 Cookie 值。")]),a._v(" "),t("li",[a._v("RabbitMQ 是通过主机名来连接服务，必须保证各个主机名之间可以 ping 通。可以通过编辑 /etc/hosts 来手工添加主机名和 IP 对应关系。如果主机名 ping 不通，RabbitMQ 服务启动会失败（如果我们是在不同的服务器上搭建 RabbitMQ 集群，大家需要注意这一点，接下来的 2.2 小结，我们将通过 Docker 的容器连接 link 来实现容器之间的访问，略有不同）。")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("docker run -d -p 15672:15672 -p 5672:5672 --name rabbit rabbitmq\n\n")])])]),t("h4",{attrs:{id:"开始搭建"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#开始搭建"}},[a._v("#")]),a._v(" 开始搭建")]),a._v(" "),t("p",[a._v("执行如下命令创建三个 RabbitMQ 容器：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--hostname")]),a._v(" rabbit01 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--name")]),a._v(" mq01 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("5671")]),a._v(":5672 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("15671")]),a._v(":15672 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-e")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("RABBITMQ_ERLANG_COOKIE")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"javaboy_rabbitmq_cookie"')]),a._v(" rabbitmq:3-management\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--hostname")]),a._v(" rabbit02 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--name")]),a._v(" mq02 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--link")]),a._v(" mq01:mylink01 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("5672")]),a._v(":5672 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("15672")]),a._v(":15672 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-e")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("RABBITMQ_ERLANG_COOKIE")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"javaboy_rabbitmq_cookie"')]),a._v(" rabbitmq:3-management\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--hostname")]),a._v(" rabbit03 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--name")]),a._v(" mq03 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--link")]),a._v(" mq01:mylink02 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--link")]),a._v(" mq02:mylink03 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("5673")]),a._v(":5672 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("15673")]),a._v(":15672 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-e")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("RABBITMQ_ERLANG_COOKIE")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"javaboy_rabbitmq_cookie"')]),a._v(" rabbitmq:3-management\n")])])]),t("p",[a._v("运行结果如下：")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://img.jssjqd.cn/202211080149779.png",alt:""}})]),a._v(" "),t("p",[a._v("三个节点现在就启动好了，注意在mq02和mq03中，分别使用了--link参数来实现容器连接。另外还需要注意，mq03容器中要既能够连接mq01也能够连接mq02。")]),a._v(" "),t("p",[a._v("接下来进入到 mq02 容器中，首先查看一下 hosts 文件，可以看到我们配置的容器连接已经生效了：  "),t("img",{attrs:{src:"https://img.jssjqd.cn/202211080149853.png",alt:""}})]),a._v(" "),t("p",[a._v("将来在mq02容器中，就可以通过mylink01或者rabbit01访问到mq01容器了。")]),a._v(" "),t("p",[a._v("接下来我们开始集群的配置。")]),a._v(" "),t("p",[a._v("分别执行如下命令将 mq02 容器加入集群中：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("rabbitmqctl stop_app\nrabbitmqctl join_cluster rabbit@rabbit01\nrabbitmqctl start_app\n")])])]),t("p",[a._v("接下来输入如下命令我们可以查看集群的状态：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("rabbitmqctl cluster_status\n")])])]),t("p",[t("img",{attrs:{src:"https://img.jssjqd.cn/202211080149513.png",alt:""}})]),a._v(" "),t("p",[a._v("可以看到，集群中已经有两个节点了。")]),a._v(" "),t("p",[a._v("接下来通过相同的方式将 mq03 也加入到集群中：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("rabbitmqctl stop_app\n\nrabbitmqctl join_cluster rabbit@rabbit01\n\nrabbitmqctl start_app\n")])])]),t("p",[t("img",{attrs:{src:"https://img.jssjqd.cn/202211080149926.png",alt:""}})]),a._v(" "),t("p",[a._v("接下来，我们可以查看集群信息：")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://img.jssjqd.cn/202211080149829.png",alt:""}})]),a._v(" "),t("p",[a._v("可以看到，此时集群中已经有三个节点了。")]),a._v(" "),t("p",[a._v("其实，这个时候，我们也可以通过网页来查看集群信息，在三个 RabbitMQ 实例的 Web 端首页，都可以看到如下内容：")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://img.jssjqd.cn/202211080149079.png",alt:""}})]),a._v(" "),t("h4",{attrs:{id:"代码测试"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#代码测试"}},[a._v("#")]),a._v(" 代码测试")]),a._v(" "),t("p",[a._v("接下来我们来简单测试一下这个集群。")]),a._v(" "),t("p",[a._v("我们创建一个名为 mq_cluster_demo 的父工程，然后在其中创建两个子工程。")]),a._v(" "),t("p",[a._v("第一个子工程名为 provider，是一个消息生产者，创建时引入 Web 和 RabbitMQ 依赖，如下：")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://img.jssjqd.cn/202211080149996.png",alt:""}})]),a._v(" "),t("p",[a._v("然后配置 applicaiton.properties，内容如下（注意集群配置）：")]),a._v(" "),t("div",{staticClass:"language-properties extra-class"},[t("pre",{pre:!0,attrs:{class:"language-properties"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("spring.rabbitmq.addresses")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v("localhost:5671,localhost:5672,localhost:5673")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("spring.rabbitmq.username")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v("guest")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("spring.rabbitmq.password")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v("guest")]),a._v("\n")])])]),t("p",[a._v("接下来提供一个简单的队列，如下：")]),a._v(" "),t("div",{staticClass:"language-JAVA extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Configuration")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("RabbitConfig")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("final")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[a._v("MY_QUEUE_NAME")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"my_queue_name"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("final")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[a._v("MY_EXCHANGE_NAME")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"my_exchange_name"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("final")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[a._v("MY_ROUTING_KEY")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"my_queue_name"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Bean")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Queue")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("queue")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Queue")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token constant"}},[a._v("MY_QUEUE_NAME")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("false")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("false")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Bean")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("DirectExchange")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("directExchange")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("DirectExchange")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token constant"}},[a._v("MY_EXCHANGE_NAME")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("false")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Bean")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Binding")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("binding")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("BindingBuilder")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("bind")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("queue")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n                "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("to")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("directExchange")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n                "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("with")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token constant"}},[a._v("MY_ROUTING_KEY")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("p",[a._v("这个没啥好说的，都是基本内容，接下来我们在单元测试中进行消息发送测试：")]),a._v(" "),t("div",{staticClass:"language-JAVA extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@SpringBootTest")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ProviderApplicationTests")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Autowired")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("RabbitTemplate")]),a._v(" rabbitTemplate"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Test")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("contextLoads")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        rabbitTemplate"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("convertAndSend")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("RabbitConfig")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token constant"}},[a._v("MY_QUEUE_NAME")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"hello 江南一点雨"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("p",[a._v("这条消息发送成功之后，在 RabbitMQ 的 Web 管理端，我们会看到三个 RabbitMQ 实例上都会显示有一条消息，但是实际上消息本身只存在于一个 RabbitMQ 实例。")]),a._v(" "),t("p",[a._v("接下来我们再创建一个消息消费者，消息消费者的依赖以及配置和消息生产者都是一模一样，我就不重复了，消息消费者中增加一个消息接收器：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('@Component\npublic class MsgReceiver {\n\n    @RabbitListener(queues = RabbitConfig.MY_QUEUE_NAME)\n    public void handleMsg(String msg) {\n        System.out.println("msg = " + msg);\n    }\n}\n')])])]),t("p",[a._v("当消息消费者启动成功后，这个方法中只收到一条消息，进一步验证了我们搭建的 RabbitMQ 集群是没问题的。")]),a._v(" "),t("h4",{attrs:{id:"反向测试"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#反向测试"}},[a._v("#")]),a._v(" 反向测试")]),a._v(" "),t("p",[a._v("接下来松哥再举两个反例，以证明消息并没有同步到其他 RabbitMQ 实例。")]),a._v(" "),t("p",[a._v("确保三个 RabbitMQ 实例都是启动状态，关闭掉 Consumer，然后通过 provider 发送一条消息，发送成功之后，关闭 mq01 实例，然后启动 Consumer 实例，此时 Consumer 实例并不会消费消息，反而会报错说 mq01 实例连接不上，这个例子就可以说明消息在 mq01 上，并没有同步到另外两个 MQ 上。相反，如果 provider 发送消息成功之后，我们没有关闭 mq01 实例而是关闭了 mq02 实例，那么你就会发现消息的消费不受影响。")]),a._v(" "),t("h3",{attrs:{id:"镜像集群-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#镜像集群-2"}},[a._v("#")]),a._v(" 镜像集群")]),a._v(" "),t("p",[a._v("所谓的镜像集群模式并不需要额外搭建，只需要我们将队列配置为镜像队列即可。")]),a._v(" "),t("p",[a._v("这个配置可以通过网页配置，也可以通过命令行配置，我们分别来看。")]),a._v(" "),t("h4",{attrs:{id:"网页配置镜像队列"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#网页配置镜像队列"}},[a._v("#")]),a._v(" 网页配置镜像队列")]),a._v(" "),t("p",[a._v("先来看看网页上如何配置镜像队列。")]),a._v(" "),t("p",[a._v("点击 Admin 选项卡，然后点击右边的 Policies，再点击 Add/update a policy，如下图：  "),t("img",{attrs:{src:"https://img.jssjqd.cn/202211080149005.png",alt:""}})]),a._v(" "),t("p",[a._v("接下来添加一个策略，如下图：")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://img.jssjqd.cn/202211080149380.png",alt:""}})]),a._v(" "),t("p",[a._v("各参数含义如下：")]),a._v(" "),t("ul",[t("li",[a._v("Name: policy 的名称。")]),a._v(" "),t("li",[a._v("Pattern: queue 的匹配模式 (正则表达式)。")]),a._v(" "),t("li",[a._v("Definition：镜像定义，主要有三个参数：ha-mode, ha-params, ha-sync-mode。\n"),t("ul",[t("li",[a._v("ha-mode：指明镜像队列的模式，有效值为 all、exactly、nodes。其中 all 表示在集群中所有的节点上进行镜像（默认即此）；exactly 表示在指定个数的节点上进行镜像，节点的个数由 ha-params 指定；nodes 表示在指定的节点上进行镜像，节点名称通过 ha-params 指定。")]),a._v(" "),t("li",[a._v("ha-params：ha-mode 模式需要用到的参数。")]),a._v(" "),t("li",[a._v("ha-sync-mode：进行队列中消息的同步方式，有效值为 automatic 和 manual。")]),a._v(" "),t("li",[a._v("priority 为可选参数，表示 policy 的优先级。")])])])]),a._v(" "),t("p",[a._v("配置完成后，点击下面的 add/update policy 按钮，完成策略的添加，如下："),t("br"),a._v(" "),t("img",{attrs:{src:"E:/project/temp/01.RabbitMQ%20docoker%E9%9B%86%E7%BE%A4/1504650-20220831102616405-116167520.png",alt:""}})]),a._v(" "),t("p",[a._v("添加完成后，我们可以进行一个简单的测试。")]),a._v(" "),t("p",[a._v("首先确认三个 RabbitMQ 都启动了，然后用上面的 provider 向消息队列发送一条消息。")]),a._v(" "),t("p",[a._v("发完之后关闭 mq01 实例。")]),a._v(" "),t("p",[a._v("接下来启动 consumer，此时发现 consumer 可以完成消息的消费（注意和前面的反向测试区分），这就说明镜像队列已经搭建成功了。")]),a._v(" "),t("h4",{attrs:{id:"命令行配置镜像队列"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#命令行配置镜像队列"}},[a._v("#")]),a._v(" 命令行配置镜像队列")]),a._v(" "),t("p",[a._v("命令行的配置格式如下：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("rabbitmqctl set_policy "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("-p vhost"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("--priority priority"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("--apply-to apply-to"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("pattern"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("definition"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("p",[a._v("举一个简单的配置案例：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("rabbitmqctl set_policy "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" / --apply-to queues my_queue_mirror "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"^"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('\'{"ha-mode":"all","ha-sync-mode":"automatic"}\'')]),a._v("\n")])])]),t("p",[t("img",{attrs:{src:"E:/project/temp/01.RabbitMQ%20docoker%E9%9B%86%E7%BE%A4/1504650-20220831102721521-1681189562.png",alt:""}})])])}),[],!1,null,null,null);t.default=e.exports}}]);