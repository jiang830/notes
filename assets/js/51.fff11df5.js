(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{375:function(v,t,_){"use strict";_.r(t);var e=_(4),d=Object(e.a)({},(function(){var v=this,t=v._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h2",{attrs:{id:"redis五种基本数据结构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#redis五种基本数据结构"}},[v._v("#")]),v._v(" Redis五种基本数据结构")]),v._v(" "),t("p",[t("img",{attrs:{src:"https://img.jssjqd.cn/20221015025636.png",alt:""}})]),v._v(" "),t("table",[t("thead",[t("tr",[t("th",[v._v("结构类型")]),v._v(" "),t("th",[v._v("结构存储的值")]),v._v(" "),t("th",[v._v("结构的读写能力")])])]),v._v(" "),t("tbody",[t("tr",[t("td",[t("strong",[v._v("String 字符串")])]),v._v(" "),t("td",[v._v("可以是字符串、整数或浮点数")]),v._v(" "),t("td",[v._v("对整个字符串或字符串的一部分进行操作；对整数或浮点数进行自增或自减操作；")])]),v._v(" "),t("tr",[t("td",[t("strong",[v._v("List 列表")])]),v._v(" "),t("td",[v._v("一个链表，链表上的每个节点都包含一个字符串")]),v._v(" "),t("td",[v._v("对链表的两端进行 push 和 pop 操作，读取单个或多个元素；根据值查找或删除元素；")])]),v._v(" "),t("tr",[t("td",[t("strong",[v._v("Set 集合")])]),v._v(" "),t("td",[v._v("包含字符串的无序集合")]),v._v(" "),t("td",[v._v("字符串的集合，包含基础的方法有看是否存在添加、获取、删除；还包含计算交集、并集、差集等")])]),v._v(" "),t("tr",[t("td",[t("strong",[v._v("Hash 散列")])]),v._v(" "),t("td",[v._v("包含键值对的无序散列表")]),v._v(" "),t("td",[v._v("包含方法有添加、获取、删除单个元素")])]),v._v(" "),t("tr",[t("td",[t("strong",[v._v("Zset 有序集合")])]),v._v(" "),t("td",[v._v("和散列一样，用于存储键值对")]),v._v(" "),t("td",[v._v("字符串成员与浮点数分数之间的有序映射；元素的排列顺序由分数的大小决定；包含方法有添加、获取、删除单个元素以及根据分值范围或成员来获取元素")])])])]),v._v(" "),t("h3",{attrs:{id:"string结构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#string结构"}},[v._v("#")]),v._v(" String结构")]),v._v(" "),t("h4",{attrs:{id:"命令使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#命令使用"}},[v._v("#")]),v._v(" 命令使用")]),v._v(" "),t("table",[t("thead",[t("tr",[t("th",[v._v("命令")]),v._v(" "),t("th",[v._v("简述")]),v._v(" "),t("th",[v._v("使用")])])]),v._v(" "),t("tbody",[t("tr",[t("td",[v._v("GET")]),v._v(" "),t("td",[v._v("获取存储在给定键中的值")]),v._v(" "),t("td",[v._v("GET name")])]),v._v(" "),t("tr",[t("td",[v._v("SET")]),v._v(" "),t("td",[v._v("设置存储在给定键中的值")]),v._v(" "),t("td",[v._v("SET name value")])]),v._v(" "),t("tr",[t("td",[v._v("MSET")]),v._v(" "),t("td",[v._v("批量存储字符串键值对")]),v._v(" "),t("td",[v._v("MSET  key  value [key value ...]")])]),v._v(" "),t("tr",[t("td",[v._v("MGET")]),v._v(" "),t("td",[v._v("批量获取字符串键值")]),v._v(" "),t("td",[v._v("MGET  key  [key ...]")])]),v._v(" "),t("tr",[t("td",[v._v("SETNX")]),v._v(" "),t("td",[v._v("存入一个不存在的字符串键值对")]),v._v(" "),t("td",[v._v("SETNX  key  value")])]),v._v(" "),t("tr",[t("td",[v._v("DEL")]),v._v(" "),t("td",[v._v("删除存储在给定键中的值")]),v._v(" "),t("td",[v._v("DEL name")])]),v._v(" "),t("tr",[t("td",[v._v("EXPIRE")]),v._v(" "),t("td",[v._v("设置一个键的过期时间(秒)")]),v._v(" "),t("td",[v._v("EXPIRE  key  seconds")])]),v._v(" "),t("tr",[t("td",[v._v("INCR")]),v._v(" "),t("td",[v._v("将键存储的值加1")]),v._v(" "),t("td",[v._v("INCR key")])]),v._v(" "),t("tr",[t("td",[v._v("DECR")]),v._v(" "),t("td",[v._v("将键存储的值减1")]),v._v(" "),t("td",[v._v("DECR key")])]),v._v(" "),t("tr",[t("td",[v._v("INCRBY")]),v._v(" "),t("td",[v._v("将键存储的值加上整数")]),v._v(" "),t("td",[v._v("INCRBY key amount")])]),v._v(" "),t("tr",[t("td",[v._v("DECRBY")]),v._v(" "),t("td",[v._v("将键存储的值减去整数")]),v._v(" "),t("td",[v._v("DECRBY key amount")])])])]),v._v(" "),t("h4",{attrs:{id:"应用场景"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#应用场景"}},[v._v("#")]),v._v(" 应用场景")]),v._v(" "),t("ul",[t("li",[t("strong",[v._v("缓存")]),v._v("：单值缓存和对象缓存等，经典使用场景，把常用信息，字符串，图片或者视频等信息放到redis中，redis作为缓存层，mysql做持久化层，降低mysql的读写压力。")]),v._v(" "),t("li",[t("strong",[v._v("计数器")]),v._v("：比如文章阅读量，点赞数等，redis是单线程模型，一个命令执行完才会执行下一个，同时数据可以一步落地到其他的数据源。")]),v._v(" "),t("li",[t("strong",[v._v("session")]),v._v("：常见方案spring session + redis实现session共享")]),v._v(" "),t("li",[t("strong",[v._v("分布式系统全局序列号")]),v._v("：redis批量生成序列号提升性能")]),v._v(" "),t("li",[t("strong",[v._v("分布式锁")]),v._v("：SETNX 返回1代表获取锁成功，返回0代表获取锁失败，执行完业务删除键代表释放锁，加默认超时时间防止程序意外终止导致死锁")])]),v._v(" "),t("h3",{attrs:{id:"hash结构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hash结构"}},[v._v("#")]),v._v(" Hash结构")]),v._v(" "),t("p",[v._v("Redis hash 是一个 string 类型的 field（字段） 和 value（值） 的映射表，hash 特别适合用于存储对象。")]),v._v(" "),t("h4",{attrs:{id:"命令使用-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#命令使用-2"}},[v._v("#")]),v._v(" 命令使用")]),v._v(" "),t("table",[t("thead",[t("tr",[t("th",[v._v("命令")]),v._v(" "),t("th",[v._v("简述")]),v._v(" "),t("th",[v._v("使用")])])]),v._v(" "),t("tbody",[t("tr",[t("td",[v._v("HSET")]),v._v(" "),t("td",[v._v("添加键值对")]),v._v(" "),t("td",[v._v("HSET hash-key sub-key1 value1")])]),v._v(" "),t("tr",[t("td",[v._v("HGET")]),v._v(" "),t("td",[v._v("获取指定散列键的值")]),v._v(" "),t("td",[v._v("HGET hash-key key1")])]),v._v(" "),t("tr",[t("td",[v._v("HGETALL")]),v._v(" "),t("td",[v._v("获取散列中包含的所有键值对")]),v._v(" "),t("td",[v._v("HGETALL hash-key")])]),v._v(" "),t("tr",[t("td",[v._v("HDEL")]),v._v(" "),t("td",[v._v("如果给定键存在于散列中，那么就移除这个键")]),v._v(" "),t("td",[v._v("HDEL hash-key sub-key1")])]),v._v(" "),t("tr",[t("td",[v._v("HSETNX")]),v._v(" "),t("td",[v._v("存储一个不存在的哈希表key的键值")]),v._v(" "),t("td",[v._v("HSET key field value")])]),v._v(" "),t("tr",[t("td",[v._v("HMSET")]),v._v(" "),t("td",[v._v("在一个哈希表key中存储多个键值对")]),v._v(" "),t("td",[v._v("HMSET key field value [field value ...]")])]),v._v(" "),t("tr",[t("td",[v._v("HMGET")]),v._v(" "),t("td",[v._v("批量获取哈希表key中多个field键值")]),v._v(" "),t("td",[v._v("HMGET key field [field ...]")])]),v._v(" "),t("tr",[t("td",[v._v("HLEN")]),v._v(" "),t("td",[v._v("返回哈希表key中field的数量")]),v._v(" "),t("td",[v._v("HLEN key")])]),v._v(" "),t("tr",[t("td",[v._v("HINCRBY")]),v._v(" "),t("td",[v._v("为哈希表key中field键的值加上增量increment")]),v._v(" "),t("td",[v._v("HINCRBY  key  field  increment")])])])]),v._v(" "),t("h4",{attrs:{id:"应用场景-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#应用场景-2"}},[v._v("#")]),v._v(" 应用场景")]),v._v(" "),t("ul",[t("li",[t("strong",[v._v("缓存")]),v._v("： 更直观，相比 string 更节省空间的维护缓存信息，如用户信息，视频信息，电商购物车等。")])]),v._v(" "),t("h4",{attrs:{id:"hash结构优缺点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hash结构优缺点"}},[v._v("#")]),v._v(" Hash结构优缺点")]),v._v(" "),t("p",[t("strong",[v._v("优点")])]),v._v(" "),t("ul",[t("li",[v._v("同类数据归类整合储存，方便数据管理")]),v._v(" "),t("li",[v._v("相比string操作消耗内存与cpu更小")]),v._v(" "),t("li",[v._v("相比string储存更节省空间")])]),v._v(" "),t("p",[t("strong",[v._v("缺点")])]),v._v(" "),t("ul",[t("li",[v._v("过期功能不能使用在field上，只能用在key上")]),v._v(" "),t("li",[v._v("Redis集群架构下不适合大规模使用")])]),v._v(" "),t("h3",{attrs:{id:"list结构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#list结构"}},[v._v("#")]),v._v(" List结构")]),v._v(" "),t("p",[t("img",{attrs:{src:"https://img.jssjqd.cn/20221015035027.png",alt:""}})]),v._v(" "),t("h4",{attrs:{id:"命令使用-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#命令使用-3"}},[v._v("#")]),v._v(" 命令使用")]),v._v(" "),t("table",[t("thead",[t("tr",[t("th",[v._v("命令")]),v._v(" "),t("th",[v._v("简述")]),v._v(" "),t("th",[v._v("使用")])])]),v._v(" "),t("tbody",[t("tr",[t("td",[v._v("RPUSH")]),v._v(" "),t("td",[v._v("将给定值推入到列表右端")]),v._v(" "),t("td",[v._v("RPUSH key value")])]),v._v(" "),t("tr",[t("td",[v._v("LPUSH")]),v._v(" "),t("td",[v._v("将给定值推入到列表左端")]),v._v(" "),t("td",[v._v("LPUSH key value")])]),v._v(" "),t("tr",[t("td",[v._v("RPOP")]),v._v(" "),t("td",[v._v("从列表的右端弹出一个值，并返回被弹出的值")]),v._v(" "),t("td",[v._v("RPOP key")])]),v._v(" "),t("tr",[t("td",[v._v("LPOP")]),v._v(" "),t("td",[v._v("从列表的左端弹出一个值，并返回被弹出的值")]),v._v(" "),t("td",[v._v("LPOP key")])]),v._v(" "),t("tr",[t("td",[v._v("LRANGE")]),v._v(" "),t("td",[v._v("获取列表在给定范围上的所有值")]),v._v(" "),t("td",[v._v("LRANGE key 0 -1")])]),v._v(" "),t("tr",[t("td",[v._v("LINDEX")]),v._v(" "),t("td",[v._v("通过索引获取列表中的元素。可以使用负数下标，以 -x 表示列表的倒数第x个元素")]),v._v(" "),t("td",[v._v("LINDEX key index")])]),v._v(" "),t("tr",[t("td",[v._v("BLPOP")]),v._v(" "),t("td",[v._v("移出并获取列表的第一个元素， 如果列表没有元素会阻塞列表直到等待超时或发现可弹出元素为止。")]),v._v(" "),t("td",[v._v("BLPOP key1 [key2 ] timeout")])]),v._v(" "),t("tr",[t("td",[v._v("BRPOP")]),v._v(" "),t("td",[v._v("移出并获取列表的最后一个元素， 如果列表没有元素会阻塞列表直到等待超时或发现可弹出元素为止。")]),v._v(" "),t("td",[v._v("BRPOP key1 [key2 ] timeout")])])])]),v._v(" "),t("h4",{attrs:{id:"应用场景-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#应用场景-3"}},[v._v("#")]),v._v(" 应用场景")]),v._v(" "),t("ul",[t("li",[t("p",[t("strong",[v._v("常用数据结构")])]),v._v(" "),t("p",[v._v("Stack(栈) = LPUSH + LPOP")]),v._v(" "),t("p",[v._v("Queue(队列）= LPUSH + RPOP")]),v._v(" "),t("p",[v._v("Blocking MQ(阻塞队列）= LPUSH + BRPOP")]),v._v(" "),t("p",[v._v("Capped Collection（有限集合）=LPUSH+LTRIM")])]),v._v(" "),t("li",[t("p",[t("strong",[v._v("微博或者公众号TimeLine")]),v._v(": 有人发布文章，用 lpush 加入时间轴，展示新的列表信息")])]),v._v(" "),t("li",[t("p",[t("strong",[v._v("消息队列")])])])]),v._v(" "),t("h3",{attrs:{id:"set结构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#set结构"}},[v._v("#")]),v._v(" Set结构")]),v._v(" "),t("h4",{attrs:{id:"命令使用-4"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#命令使用-4"}},[v._v("#")]),v._v(" 命令使用")]),v._v(" "),t("table",[t("thead",[t("tr",[t("th",[v._v("命令")]),v._v(" "),t("th",[v._v("简述")]),v._v(" "),t("th",[v._v("使用")])])]),v._v(" "),t("tbody",[t("tr",[t("td",[v._v("SADD")]),v._v(" "),t("td",[v._v("向集合添加一个或多个成员")]),v._v(" "),t("td",[v._v("SADD key value")])]),v._v(" "),t("tr",[t("td",[v._v("SREM")]),v._v(" "),t("td",[v._v("从集合key中删除元素")]),v._v(" "),t("td",[v._v("SREM  key  member  [member ...]")])]),v._v(" "),t("tr",[t("td",[v._v("SCARD")]),v._v(" "),t("td",[v._v("获取集合的成员个数")]),v._v(" "),t("td",[v._v("SCARD key")])]),v._v(" "),t("tr",[t("td",[v._v("SMEMBERS")]),v._v(" "),t("td",[v._v("返回集合中的所有成员")]),v._v(" "),t("td",[v._v("SMEMBERS key member")])]),v._v(" "),t("tr",[t("td",[v._v("SISMEMBER")]),v._v(" "),t("td",[v._v("判断 member 元素是否是集合 key 的成员")]),v._v(" "),t("td",[v._v("SISMEMBER key member")])]),v._v(" "),t("tr",[t("td",[v._v("SPOP")]),v._v(" "),t("td",[v._v("从集合key中选出count个元素，元素从key中删除")]),v._v(" "),t("td",[v._v("SPOP key [count]")])]),v._v(" "),t("tr",[t("td",[v._v("SRANDMEMBER")]),v._v(" "),t("td",[v._v("从集合key中选出count个元素，元素不从key中删除")]),v._v(" "),t("td",[v._v("SRANDMEMBER key [count]")])])])]),v._v(" "),t("h4",{attrs:{id:"运算操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#运算操作"}},[v._v("#")]),v._v(" 运算操作")]),v._v(" "),t("table",[t("thead",[t("tr",[t("th",[v._v("命令")]),v._v(" "),t("th",[v._v("简述")]),v._v(" "),t("th",[v._v("使用")])])]),v._v(" "),t("tbody",[t("tr",[t("td",[v._v("SINTER")]),v._v(" "),t("td",[v._v("交集运算")]),v._v(" "),t("td",[v._v("SINTER  key  [key ...]")])]),v._v(" "),t("tr",[t("td",[v._v("SINTERSTORE")]),v._v(" "),t("td",[v._v("将交集结果存入新集合destination中")]),v._v(" "),t("td",[v._v("SINTERSTORE  destination  key  [key ..]")])]),v._v(" "),t("tr",[t("td",[v._v("SUNION")]),v._v(" "),t("td",[v._v("并集运算")]),v._v(" "),t("td",[v._v("SUNION  key  [key ..]")])]),v._v(" "),t("tr",[t("td",[v._v("SUNIONSTORE")]),v._v(" "),t("td",[v._v("将并集结果存入新集合destination中")]),v._v(" "),t("td",[v._v("SUNIONSTORE  destination  key  [key ...]")])]),v._v(" "),t("tr",[t("td",[v._v("SDIFF")]),v._v(" "),t("td",[v._v("差集运算")]),v._v(" "),t("td",[v._v("SDIFF  key  [key ...]")])]),v._v(" "),t("tr",[t("td",[v._v("SDIFFSTORE")]),v._v(" "),t("td",[v._v("将差集结果存入新集合destination中")]),v._v(" "),t("td",[v._v("SDIFFSTORE  destination  key  [key ...]")])])])]),v._v(" "),t("h4",{attrs:{id:"应用场景-4"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#应用场景-4"}},[v._v("#")]),v._v(" 应用场景")]),v._v(" "),t("ul",[t("li",[t("p",[t("strong",[v._v("微信抽奖小程序")])])]),v._v(" "),t("li",[t("p",[t("strong",[v._v("微信微博点赞，收藏，标签")]),v._v("，可以实现点赞，取消点赞，查看用户是否点赞，获取点赞的用户列表，获取点赞的用户数")])]),v._v(" "),t("li",[t("p",[t("strong",[v._v("商品筛选")]),v._v("，使用SINTER交集实现筛选")])]),v._v(" "),t("li",[t("p",[t("strong",[v._v("微信微博关注")])]),v._v(" "),t("p",[v._v("共同关注：SINTER")]),v._v(" "),t("p",[v._v("我关注的人也关注：SISMEMBER")]),v._v(" "),t("p",[v._v("我可能认识的人：SDIFF")])])]),v._v(" "),t("h3",{attrs:{id:"zset有序集合类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#zset有序集合类型"}},[v._v("#")]),v._v(" ZSet有序集合类型")]),v._v(" "),t("p",[v._v("Redis 有序集合和集合一样也是 string 类型元素的集合, 且不允许重复的成员。不同的是每个元素都会关联一个 double 类型的分数。redis 正是通过分数来为集合中的成员进行从小到大的排序")]),v._v(" "),t("p",[v._v("有序集合的成员是唯一的, 但分数 (score) 却可以重复。有序集合是通过两种数据结构实现：")]),v._v(" "),t("ol",[t("li",[t("p",[t("strong",[v._v("压缩列表 (ziplist)")]),v._v(": ziplist 是为了提高存储效率而设计的一种特殊编码的双向链表。它可以存储字符串或者整数，存储整数时是采用整数的二进制而不是字符串形式存储。它能在 O(1) 的时间复杂度下完成 list 两端的 push 和 pop 操作。但是因为每次操作都需要重新分配 ziplist 的内存，所以实际复杂度和 ziplist 的内存使用量相关")])]),v._v(" "),t("li",[t("p",[t("strong",[v._v("跳跃表（zSkiplist)")]),v._v(": 跳跃表的性能可以保证在查找，删除，添加等操作的时候在对数期望时间内完成，这个性能是可以和平衡树来相比较的，而且在实现方面比平衡树要优雅，这是采用跳跃表的主要原因。跳跃表的复杂度是 O(log(n))。")]),v._v(" "),t("p",[t("img",{attrs:{src:"https://img.jssjqd.cn/202212030159580.png",alt:"img"}})])])]),v._v(" "),t("h4",{attrs:{id:"命令使用-5"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#命令使用-5"}},[v._v("#")]),v._v(" "),t("strong",[v._v("命令使用")])]),v._v(" "),t("table",[t("thead",[t("tr",[t("th",[v._v("命令")]),v._v(" "),t("th",[v._v("简述")]),v._v(" "),t("th",[v._v("使用")])])]),v._v(" "),t("tbody",[t("tr",[t("td",[v._v("ZADD")]),v._v(" "),t("td",[v._v("将一个带有给定分值的成员添加到有序集合里面")]),v._v(" "),t("td",[v._v("ZADD zset-key 178 member1")])]),v._v(" "),t("tr",[t("td",[v._v("ZRANGE")]),v._v(" "),t("td",[v._v("正序获取有序集合key从start下标到stop下标的元素")]),v._v(" "),t("td",[v._v("ZRANGE key start stop [WITHSCORES]")])]),v._v(" "),t("tr",[t("td",[v._v("ZREVRANGE")]),v._v(" "),t("td",[v._v("倒序获取有序集合key从start下标到stop下标的元素")]),v._v(" "),t("td",[v._v("ZREVRANGE key start stop [WITHSCORES]")])]),v._v(" "),t("tr",[t("td",[v._v("ZREM")]),v._v(" "),t("td",[v._v("如果给定元素成员存在于有序集合中，那么就移除这个元素")]),v._v(" "),t("td",[v._v("ZREM zset-key member1 [member …]")])]),v._v(" "),t("tr",[t("td",[v._v("ZSCORE")]),v._v(" "),t("td",[v._v("返回有序集合key中元素member的分值")]),v._v(" "),t("td",[v._v("ZSCORE key member")])]),v._v(" "),t("tr",[t("td",[v._v("ZINCRBY")]),v._v(" "),t("td",[v._v("为有序集合key中元素member的分值加上increment")]),v._v(" "),t("td",[v._v("ZINCRBY key increment member")])]),v._v(" "),t("tr",[t("td",[v._v("ZCARD")]),v._v(" "),t("td",[v._v("返回有序集合key中元素个数")]),v._v(" "),t("td",[v._v("ZCARD key")])]),v._v(" "),t("tr",[t("td",[v._v("ZUNIONSTORE")]),v._v(" "),t("td",[v._v("并集计算")]),v._v(" "),t("td",[v._v("ZUNIONSTORE destkey numkeys key [key ...]")])]),v._v(" "),t("tr",[t("td",[v._v("ZINTERSTORE")]),v._v(" "),t("td",[v._v("交集计算")]),v._v(" "),t("td",[v._v("ZINTERSTORE destkey numkeys key [key …]")])])])]),v._v(" "),t("p",[t("img",{attrs:{src:"https://img.jssjqd.cn/20221015044224.png",alt:""}})]),v._v(" "),t("h4",{attrs:{id:"应用场景-5"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#应用场景-5"}},[v._v("#")]),v._v(" 应用场景")]),v._v(" "),t("ul",[t("li",[t("strong",[v._v("排行榜")]),v._v("：有序集合经典使用场景。例如小说视频等网站需要对用户上传的小说视频做排行榜，榜单可以按照用户关注数，，点击数，更新时间，字数等打分，做排行。")])])])}),[],!1,null,null,null);t.default=d.exports}}]);