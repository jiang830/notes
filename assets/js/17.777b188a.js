(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{342:function(v,_,e){"use strict";e.r(_);var l=e(4),t=Object(l.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h3",{attrs:{id:"内容"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#内容"}},[v._v("#")]),v._v(" 内容")]),v._v(" "),_("ol",[_("li",[v._v("索引数据结构红黑树,Hash,B+树等")]),v._v(" "),_("li",[v._v("千万级数据表如何用B+树索引快速查找")]),v._v(" "),_("li",[v._v("聚集索引&聚簇索引&稀疏索引是什么")]),v._v(" "),_("li",[v._v("为什么DBA推荐用自增主键做索引")]),v._v(" "),_("li",[v._v("联合索引底层数据结构是怎么样的")]),v._v(" "),_("li",[v._v("MySQL最左前缀优化原则")])]),v._v(" "),_("p",[_("strong",[v._v("索引的本质")])]),v._v(" "),_("p",[v._v("索引是帮助MySQL高效获取数据的排好序的数据结构")]),v._v(" "),_("p",[v._v("索引数据结构")]),v._v(" "),_("ul",[_("li",[_("p",[v._v("二叉树")]),v._v(" "),_("p",[v._v("极端情况下会变成一条直线")])]),v._v(" "),_("li",[_("p",[v._v("红黑树")]),v._v(" "),_("p",[v._v("相比于二叉树，数据平衡了，但是在数据比较多的情况下，树的高度会比较高，查询数据困难")])]),v._v(" "),_("li",[_("p",[v._v("Hash表")])]),v._v(" "),_("li",[_("p",[v._v("B-Tree")])])]),v._v(" "),_("p",[_("em",[v._v("B-Tree")])]),v._v(" "),_("ul",[_("li",[v._v("叶节点具有相同的深度，叶节点的指针为空")]),v._v(" "),_("li",[v._v("所有索引元素不重复")]),v._v(" "),_("li",[v._v("节点中的数据索引从左到右递增排列")])]),v._v(" "),_("p",[_("img",{attrs:{src:"https://img.jssjqd.cn/20221025015342.png",alt:""}})]),v._v(" "),_("p",[_("em",[v._v("B+Tree(B-Tree变种)")])]),v._v(" "),_("ul",[_("li",[v._v("非叶子节点不存储data，只存储索引(冗余)，可以放更多的索引")]),v._v(" "),_("li",[v._v("叶子节点包含所有索引字段")]),v._v(" "),_("li",[v._v("叶子节点用指针连接，提高区间访问的性能")])]),v._v(" "),_("p",[_("img",{attrs:{src:"https://img.jssjqd.cn/20221025015420.png",alt:""}})]),v._v(" "),_("p",[_("em",[v._v("B+Tree对比B-Tree的优点：")])]),v._v(" "),_("ul",[_("li",[_("p",[v._v("B+Tree 解决的两大问题是（每个节点存储更多关键字；路数更多）")])]),v._v(" "),_("li",[_("p",[v._v("扫库、扫表能力更强（如果我们要对表进行全表扫描，只需要遍历叶子节点就可以了，不需要遍历整棵 B+Tree 拿到所有的数据）")])]),v._v(" "),_("li",[_("p",[v._v("B+Tree 的磁盘读写能力相对于 B Tree 来说更强，同数据量下磁盘I/0次数更少（根节点和枝节点不保存数据区，所以一个节点可以保存更多的关键字，一次磁盘加载的关键字更多）")])]),v._v(" "),_("li",[_("p",[v._v("范围查询和排序能力更强（因为叶子节点上有下一个数据区的指针，数据形成了链表）")])]),v._v(" "),_("li",[_("p",[v._v("效率更加稳定（B+Tree 永远是在叶子节点拿到数据，所以 IO 次数是稳定的）")])])])])}),[],!1,null,null,null);_.default=t.exports}}]);